{% extends '::loggedin.html.twig' %}

{% trans_default_domain 'InfostanderAdminBundle' %}

{% block stylesheets %}
  <link href="/css/bootstrap.min.css" rel="stylesheet"/>
  <link href="/codebase/dhtmlxscheduler.css" rel="stylesheet" type="text/css"/>
  <link href="/css/booking.css" rel="stylesheet"/>
{% endblock %}

{% block body %}
  <div class="container">
    <h2 class="scheduler-title">{{ 'scheduler.title'|trans }}</h2>
    <p>{{ 'scheduler.text'|trans }}</p>
    <form class="booking-form-button-nofloat" action="{{ path('infostander_admin_booking_add') }}" method="get">
      <span class="btn-group btn-group-xs">
        <button type="submit" class="btn btn-lg btn-primary btn-block">{{ 'booking.index.add'|trans }}</button>
      </span>
    </form>
    <div class="schedule-overview">
      <div id="scheduler_here" class="dhx_cal_container">
        <div class="dhx_cal_navline">
          <div class="dhx_cal_prev_button">&nbsp;</div>
          <div class="dhx_cal_next_button">&nbsp;</div>
          <div class="dhx_cal_today_button"></div>
          <div class="dhx_cal_date"></div>
          <span class="btn-group btn-group-sm">
            <div class="dhx_cal_tab btn btn-lg btn-default btn-block" name="timeline_day_tab" style="margin-left: 20px;"></div>
          </span>
          <span class="btn-group btn-group-sm">
            <div class="dhx_cal_tab btn btn-lg btn-default btn-block" name="timeline_week_tab" style="margin-left: 20px;" ></div>
          </span>
          <span class="btn-group btn-group-sm">
            <div class="dhx_cal_tab btn btn-lg btn-default btn-block" name="timeline_month_tab" style="margin-left: 20px;"></div>
          </span>
        </div>
        <div class="dhx_cal_header"></div>
        <div class="dhx_cal_data"></div>
      </div>
    </div>
  </div>
{% endblock %}

{% block javascripts %}
  <script src="/codebase/dhtmlxscheduler.js" type="text/javascript"></script>
  <script src="/codebase/ext/dhtmlxscheduler_timeline.js" type="text/javascript"></script>
  <script src="/codebase/ext/dhtmlxscheduler_container_autoresize.js"></script>
  <script src="/codebase/locale/locale_da.js" charset="utf-8"></script>
  <script type="text/javascript">
    var pathToBooking = '{{ path('infostander_admin_booking') }}';

    function changeSortOrder(id, up) {
      if (up) {
        window.location.href = pathToBooking + "/sortorder/" + id + "/up";
      } else {
        window.location.href = pathToBooking + "/sortorder/" + id + "/down";
      }
    }

    function editEvent(id) {
      window.location.href = pathToBooking + "/edit/" + id;
    }

    function updateLineColors() {
      // Add styles to events
      $(".dhx_cal_event_line").each(function(index) {
        if (index % 2 == 1) {
          $(this).addClass("line-odd");
        } else {
          $(this).addClass("line-even");
        }
      });
    }

    $(function() {
      scheduler.config.xml_date="%Y-%m-%d %H:%i";
      scheduler.config.fix_tab_position = false;
      scheduler.config.readonly = true;

      scheduler.locale.labels.timeline_day_tab = "{{ 'booking.index.day'|trans }}";
      scheduler.locale.labels.timeline_week_tab = "{{ 'booking.index.week'|trans }}";
      scheduler.locale.labels.timeline_month_tab ="{{ 'booking.index.month'|trans }}";

      // Load data from the db
      var bookingIDs = [];
      var bookingArray = [];

      {% for booking in bookings %}
      bookingIDs.push({key: '{{ loop.index }}', label: '<span onclick="changeSortOrder({{ booking.id }}, false);" class="booking-arrow-down glyphicon glyphicon-arrow-down"></span><span onclick="changeSortOrder({{ booking.id }}, true);" class="booking-arrow-up glyphicon glyphicon-arrow-up"></span><span onclick="editEvent({{ booking.id }})" class="booking-wrench glyphicon glyphicon-wrench"></span>{{ booking.title }}' });
      bookingArray.push({ id: '{{ booking.id }}', text: '', start_date: '{{ booking.startdate | date('Y-m-d H:i') }}', end_date: '{{ booking.enddate | date('Y-m-d H:i') }}', booking_id: '{{ loop.index }}' })
      {% endfor %}

      scheduler.createTimelineView({
        name:"timeline_day",
        section_autoheight: false,
        dy: 25,
        x_unit:"hour",//measuring unit of the X-Axis.
        x_date:"%H:%i", //date format of the X-Axis
        x_step:2,      //X-Axis step in 'x_unit's
        x_size:12,      //X-Axis length specified as the total number of 'x_step's
        x_start:0,     //X-Axis offset in 'x_unit's
        x_length:12,    //number of 'x_step's that will be scrolled at a time
        y_unit:         //sections of the view (titles of Y-Axis)
          bookingIDs,
        y_property:"booking_id", //mapped data property
        render:"bar"             //view mode
      });

      scheduler.createTimelineView({
        name:"timeline_week",
        section_autoheight: false,
        dy: 25,
        x_unit:"day",//measuring unit of the X-Axis.
        x_date:"%D %d / %m", //date format of the X-Axis
        x_step:1,      //X-Axis step in 'x_unit's
        x_size:7,      //X-Axis length specified as the total number of 'x_step's
        x_start:0,     //X-Axis offset in 'x_unit's
        x_length:7,    //number of 'x_step's that will be scrolled at a time
        y_unit:         //sections of the view (titles of Y-Axis)
          bookingIDs,
        y_property:"booking_id", //mapped data property
        render:"bar"             //view mode
      });

      scheduler.createTimelineView({
        name:"timeline_month",
        section_autoheight: false,
        dy: 25,
        x_unit:"day",//measuring unit of the X-Axis.
        x_date:"%d / %m", //date format of the X-Axis
        x_step:2,      //X-Axis step in 'x_unit's
        x_size:15,      //X-Axis length specified as the total number of 'x_step's
        x_start:0,     //X-Axis offset in 'x_unit's
        x_length:15,    //number of 'x_step's that will be scrolled at a time
        y_unit:         //sections of the view (titles of Y-Axis)
          bookingIDs, //[{key:1, label:"month"}],
        y_property:"booking_id", //mapped data property
        render:"bar"             //view mode
      });

      scheduler.init('scheduler_here', new Date(),"timeline_month");

      scheduler.parse(bookingArray, "json");

      scheduler.attachEvent("onViewChange", function(section, isOpen, allSections){
        updateLineColors();
      });

      scheduler.attachEvent("onSchedulerResize", function(section, isOpen, allSections){
        updateLineColors();
      });

      updateLineColors();
    });


  </script>
{% endblock %}